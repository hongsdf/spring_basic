<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- After-around : 비즈니스 로직 실행 전 후 모두 실행되는 횡단 로직 -->		
	<context:component-scan base-package="com.springboot.biz"></context:component-scan>
	<!-- 어노테이션으로 AOP구현하기 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy> <!-- 엘리먼트 선언만 하면 스프링 컨테이너는 AOP관련된  어노테이션을 인식하고 처리해준다. -->
	<!-- DataSource 설정 -->
	<context:property-placeholder location="classpath:config/database.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	<!-- 컴포너트 스캔 설정 @component-설정 
	base-package="com.springboot.biz : 사용할 패키지명(스캔 대상)
	
	-->
	<!--spring jdbc설정 -->			
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	 
	<!-- Transaction 설정 이후 Mybatis,JPA사용시 DAO클래스 구현시 JPATransactionManager 처럼 구현하면 된다. -->			
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 
		tx:advice : 트랜잭션 구동 시점
	 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/><!-- get으로 시작하는 메서드를 '읽기전용' -->
			<tx:method name="*"/><!-- 읽기 전용을 제외한 나머지 메서드만 트랜잭션관리 대상 -->
		</tx:attributes>
	</tx:advice>
	
	<!-- aop - 트랜잭션 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.springboot.biz..*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
</beans>